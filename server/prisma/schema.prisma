generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// datasource db {
//   provider = "postgresql"
//   url = env("POSTGRES_PRISMA_URL")
//   directUrl = env("POSTGRES_URL_NON_POOLING")
// }

enum UserRole {
  ADMIN
  USER
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  role     UserRole @default(USER)

  cart             Cart?
  orders           Order[]
  verificationCode VerificationCode?

  verified Boolean @default(false)

  createdAt DateTime @default(now())
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  sale        Float?
  price       Float
  rating      Float   @default(0)

  cartItems CartItem[]

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  createdAt DateTime @default(now())
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

enum OrderStatus {
  PENDING
  SUCCEEDED
  CANCELLED
}

model Order {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id])
  userId Int

  totalAmount Int
  status      OrderStatus @default(PENDING)
  paymentId   String?

  items Json

  fullName String
  email    String
  country  String
  city     String
  addrress String
  zip      String
  comment  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationCode {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  code String

  createdAt DateTime @default(now())
}

model Cart {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @unique

  items CartItem[]

  token String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id Int @id @default(autoincrement())

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  cart   Cart @relation(fields: [cartId], references: [id])
  cartId Int

  quantity Int @default(1)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
